<?php
// These stubs were generated by the phan stub generator.
// @phan-stub-for-extension session@7.4.12

namespace {
class SessionHandler implements \SessionHandlerInterface, \SessionIdInterface {

    // methods
    public function open($save_path, $session_name) {}
    public function close() {}
    public function read($key) {}
    public function write($key, $val) {}
    public function destroy($key) {}
    public function gc($maxlifetime) {}
    public function create_sid() {}
}

interface SessionHandlerInterface {

    // methods
    function open($save_path, $session_name);
    function close();
    function read($key);
    function write($key, $val);
    function destroy($key);
    function gc($maxlifetime);
}

interface SessionIdInterface {

    // methods
    function create_sid();
}

interface SessionUpdateTimestampHandlerInterface {

    // methods
    function validateId($key);
    function updateTimestamp($key, $val);
}

function session_abort() {}
function session_cache_expire($new_cache_expire = null) {}
function session_cache_limiter($cache_limiter = null) {}
function session_commit() {}
function session_create_id($prefix = null) {}
function session_decode($data) {}
function session_destroy() {}
function session_encode() {}
function session_gc() {}
function session_get_cookie_params() {}
function session_id($id = null) {}
function session_module_name($module = null) {}
function session_name($name = null) {}
function session_regenerate_id($delete_old_session = null) {}
function session_register_shutdown() {}
function session_reset() {}
function session_save_path($path = null) {}
function session_set_cookie_params($lifetime_or_options, $path = null, $domain = null, $secure = null, $httponly = null) {}
function session_set_save_handler($open, $close = null, $read = null, $write = null, $destroy = null, $gc = null, $create_sid = null, $validate_sid = null, $update_timestamp = null) {}
function session_start($options = null) {}
function session_status() {}
function session_unset() {}
function session_write_close() {}
const PHP_SESSION_ACTIVE = 2;
const PHP_SESSION_DISABLED = 0;
const PHP_SESSION_NONE = 1;
}
